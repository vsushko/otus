# состоянние кластера
GET /_cluster/health

# информаци о шардах
GET /_cat/shards?pretty

# информация о нодах
GET /_cat/nodes?v

# создает индекс books
PUT /books
{
  "settings": {
    "number_of_shards": 3,
    "number_of_replicas": 3
  }
}

PUT /books/_settings
{
  "number_of_replicas": 4
}

# добавит документ с указанным id
POST /books/_doc/100
{
  "title": "Pride and Prejudice",
  "author": "Jane Austen",
  "price": 20,
  "in_stock": 5
}


POST /books/_doc/1
{
  "reviews": [
    {
      "rating": 5.0,
      "comment": "Hilarious and touching. fun for the whole family.",
      "author": {
        "first_name": "John",
        "last_name": "Doe",
        "email": "john@doe.com"
      }
    },
    {
      "rating": 5.0,
      "comment": "Pride and Prejudice has always been one of my favorite books.",
      "author": {
        "first_name": "John",
        "last_name": "Smith",
        "email": "smith@john.com"
      }
    }
  ]
}

# nested query
GET /books/_search
{
  "query":  {
    "nested" : {
      "path" : "reviews",
      "query" : {
        "bool" : {
          "must" : [ { "match" : {"reviews.rating" : 5.0} } ]
        }
      }
    }
  }
}


GET /reviews/_mapping

# update mapping field
PUT /reviews/_mapping
{
  "properties": {
    "comment_id": {
      "type": "keyword"
    }
  }
}

#
PUT /reviews/_mapping
{
  "properties": {
    "author": {
      "properties": {
        "email": {
          "type": "keyword",
          "ignore_above": 256
        }
      }
    }
  }
}

# querying child documents by parent
GET /books/_search
{
  "query": {
    "has_parent": {
      "parent_type": "books",
      "query": {
        "term": {
          "FIELD": {
            "value": "VALUE"
          }
        }
      }
    }
  }
}


GET /books/_search
{
  "query": {
    "match_all": {
    }
  }
}

GET /books/_mapping

DELETE books

PUT /books
{
  "mappings": {
    "properties" : {
      "join_field" : {
        "type" : "join",
        "relations": {
          "books": "author"
        }
      }
    }
  }
}

PUT /books/_doc/1
{
  "author": "Harper Lee",
  "join_field": "books"
}

PUT /books/_doc/2
{
  "author": "Jane Austen",
  "join_field": "books"
}

PUT /books/_doc/3?routing=1
{
  "title": "To Kill a Mockingbird",
  "price": 20,
  "in_stock": 5,
  "join_field": {
    "name": "author",
    "parent": 1
  }
}

PUT /books/_doc/4?routing=2
{
  "title": "Pride and Prejudice",
  "price": 20,
  "in_stock": 5,
  "join_field": {
    "name": "author",
    "parent": 2
  }
}

# has parent
GET /books/_search
{
  "query": {
    "has_parent": {
      "parent_type": "books",
      "query": {
        "term": {
          "author.keyword": "Jane Austen"
        }
      }
    }
  }
}

# has child
GET /books/_search
{
  "query": {
    "has_child": {
      "type": "author",
      "query": {
        "bool": {
          "should": [
            {
              "term": {
                "title.keyword": "To Kill a Mockingbird"
              }
            }
          ]
        }
      }
    }
  }
}
